apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: multicluster-global-hub-operator
  name: multicluster-global-hub
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: default
  namespace: multicluster-global-hub
spec:
  targetNamespaces:
  - multicluster-global-hub
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: multicluster-global-hub-operator
  namespace: multicluster-global-hub
  labels:
    name: multicluster-global-hub-operator
spec:
  selector:
    matchLabels:
      name: multicluster-global-hub-operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: multicluster-global-hub-operator
      labels:
        name: multicluster-global-hub-operator
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
        - multicluster-global-hub-operator
        args:
        - --leader-election
        image: quay.io/stolostron/multicluster-global-hub-operator:latest
        imagePullPolicy: Always
        name: multicluster-global-hub-operator
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RELATED_IMAGE_MULTICLUSTER_GLOBAL_HUB_MANAGER
          value: quay.io/stolostron/multicluster-global-hub-manager:latest
        - name: RELATED_IMAGE_MULTICLUSTER_GLOBAL_HUB_AGENT
          value: quay.io/stolostron/multicluster-global-hub-agent:latest
        - name: RELATED_IMAGE_GRAFANA
          value: quay.io/stolostron/grafana:2.12.0-SNAPSHOT-2024-09-03-21-11-25
        - name: RELATED_IMAGE_POSTGRESQL
          value: quay.io/stolostron/postgresql-13:1-101
        - name: RELATED_IMAGE_POSTGRES_EXPORTER
          value: "quay.io/prometheuscommunity/postgres-exporter:v0.15.0"
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            # cpu: 50m
            # https://home.robusta.dev/blog/stop-using-cpu-limits
            memory: 200Mi
          requests:
            cpu: 1m
            memory: 100Mi
      serviceAccountName: multicluster-global-hub-operator
      terminationGracePeriodSeconds: 10
